# -*- coding: utf-8 -*-
"""Small codes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ycR8CNPf5S7cydOwQ_tCU25PC6xDQUpW
"""

#rolling of dice randomly
import random
min = 1
max = 6

want_to_roll = "yes"
while want_to_roll == "yes" or want_to_roll == "y":
  print("dice is getting rolled.....")
  print("The values are.....")

  print(random.randint(min, max))
  print(random.randint(min,max))

  want_to_roll = input("want to roll dice again? ")
  print("Thankyou for rolling the dice.....")



pip install yfinance

import yfinance as yf
df = yf.download("TSLA",
                 start = "2020-11-01",
                 end = "2022-5-27",
                 interval = "1mo")

df.head()

df.describe()

t = yf.Ticker("T")
t.dividends

t.dividends.plot(figsize=(14,7))

df.loc[:, 'ma20'] = df.Close.rolling(20).mean()
df.loc[:,'ma200'] = df.Close.rolling(200).mean()

df.plot()

pip install alpha_vantage

import pandas as pd
from alpha_vantage.timeseries import TimeSeries
import time

api_key = 'BEKQGHLH129PCTOQ'

ts = TimeSeries(key = api_key, output_format = 'pandas')
data, meta_data = ts.get_intraday(symbol = 'TSLA', interval ='1min', outputsize = 'full')
print(data)

i = 1
#while i==1:
#data.to_excel("output.xlsx")
#time.sleep(60)

close_data = data['4. close']
percentage_change = close_data.pct_change()

print(percentage_change)



last_change = percentage_change[-1]

if abs(last_change) > 0.0004:
  print("MSFT Alert: "+ last_change)

import time
import psutil
import matplotlib.pyplot as plt

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib notebook
plt.rcParams['animation.html'] = 'jshtml'

fig = plt.figure()
ax = fig.add_subplot(121)
fig.show()

psutil.cpu_percent()

